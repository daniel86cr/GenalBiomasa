package com.dina.genasoft.db.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.dina.genasoft.db.entity.TEmpleados;

public interface TEmpleadosMapper {

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    int insert(TEmpleados record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    int insertSelective(TEmpleados record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    TEmpleados selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    int updateByPrimaryKeySelective(TEmpleados record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table t_empleados
     * @mbg.generated  Wed May 05 17:23:04 CEST 2021
     */
    int updateByPrimaryKey(TEmpleados record);

    /**
     * Método que nos busca el empleado que tiene como nombre de usuario el pasado por parámetro.
     * @param nombreUsuario El nombre de usuario por el que realizar la búqueda.
     * @return El empleado encontrado.
     */
    TEmpleados obtenerEmpleadoPorNombreUsuario(@Param("nombreUsuario") String nombreUsuario);

    /**
     * Método que nos busca el empleado a partir del nombre.
     * @param nombre El nombre por el que realizar la búsqueda.
     * @return El empleado encontrado
     */
    TEmpleados obtenerEmpleadoPorNombre(@Param("nombre") String nombre);

    /**
     * Método que nos retorna todos los empleados existentes en el sistema (activos o no)
     * @return Lista de empleados encontrados.
     */
    List<TEmpleados> obtenerTodosEmpleados();

    /**
     * Método que nos busca el empleado a partir del código de acceso.
     * @param codAcceso El código de acceso por el que realizar la búsqueda.
     * @return El empleado encontrado
     */
    //@Cacheable(value = "empleados", key = "#p0")
    TEmpleados obtenerEmpleadoPorCodAcceso(@Param("codAcceso") String codAcceso);

    /**
     * Método que nos retorna todos los empleados que tienen el rol pasado por parámetro y que esté activo
     * @param idRol El Rol por el que realizar la búsqueda
     * @return Lista de empleados encontrados.
     */
    List<TEmpleados> obtenerEmpleadosPorRolActivos(@Param("idRol") Integer idRol);
}